@page "/detalhelivro/{id:int}"
@rendermode InteractiveServer
<PageTitle>@Titulo</PageTitle>

    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" method="post" FormName="LivroForm" OnValidSubmit="EnviarLivro"
                      Model="Livro" id="DetalheLivro">
                <h3>@Titulo</h3>
            <input type="hidden" name="Livro.LivroId" value="@Livro.LivroId"/>
            <div class="mb-3">
                <label for="titulo" class="form-label">Titulo</label>
                <InputText id="titulo" @bind-Value="Livro.Titulo" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="autor" class="form-label">Autor</label>
                <InputText id="autor" @bind-Value="Livro.Autor" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="lancamento" class="form-label">Lançamento</label>
                <InputDate id="lancamento" @bind-Value="Livro.Lancamento" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="editora" class="form-label">Editora</label>
                <InputSelect id="editora" @bind-Value="Livro.Editora" class="form-control">
                    <option value="0">
                        Selecione a Editora
                    </option>
                    @foreach (var editora in Enum.GetValues(typeof(Editora)))
                    {
                        <option value="@editora">
                            @editora.ToString()
                        </option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="capa" class="form-label">Capa</label>
                <InputText id="capa" @bind-Value="Livro.Capa" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="categoria" class="form-label">Categoria</label>
                <InputSelect id="categoria" @bind-Value="Livro.Categoria" class="form-control">
                    <option value="0">
                        Selecione a Categoria
                    </option>
                    @foreach (var categoria in Enum.GetValues(typeof(Categoria)))
                    {
                        <option value="@categoria">
                            @categoria.ToString()
                        </option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <button class="btn btn-primary shadow-none">
                    Enviar
                </button>
                @if(Livro.LivroId > 0)
                {
                    <button @onclick="ApagarLivro" type="button" class="btn btn-danger ms-3 shadow-none">
                        Apagar
                    </button>
                }
                <a href="/livros" class="btn btn-secondary ms-3" data-enhance-nav="false">
                    Retornar para livros
                </a>
            </div>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm(FormName = "LivroForm")]
    public Livro? Livro { get; set; }

    public string Titulo => Livro.LivroId > 0 ?
        $"Editando Livro {Livro.Titulo}" :
        "Novo Livro";

    protected override async void OnInitialized()
    {
        Livro ??= await livroRepository.ObterLivro(Id) ??
            new Livro(0, null, null, DateTime.Now, null, Editora.Nenhuma, Categoria.Nenhuma);
    }

    private async Task EnviarLivro()
    {
        _ = Livro.LivroId > 0  ?
            await livroRepository.AtualizarLivro(Livro) :
            await livroRepository.AdicionarLivro(Livro);
        navigation.NavigateTo("/livros");
    }

    private async Task ApagarLivro()
    {
        await livroRepository.DeletarLivro(Livro.LivroId);
        navigation.NavigateTo("/livros");
    }
}